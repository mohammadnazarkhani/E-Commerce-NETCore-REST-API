// <auto-generated />
using System;
using FakeEmailGateway.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FakeEmailGateway.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250602042220_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FakeEmailGateway.Models.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReceiverInboxId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SenderOutboxId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverInboxId");

                    b.HasIndex("SenderOutboxId");

                    b.HasIndex("Subject")
                        .HasDatabaseName("IX_Email_Subject");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("FakeEmailGateway.Models.Inbox", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Inboxes");
                });

            modelBuilder.Entity("FakeEmailGateway.Models.Outbox", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Outboxes");
                });

            modelBuilder.Entity("FakeEmailGateway.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FakeEmailGateway.Models.Email", b =>
                {
                    b.HasOne("FakeEmailGateway.Models.Inbox", "ReceiverInbox")
                        .WithMany("ReceivedEmails")
                        .HasForeignKey("ReceiverInboxId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FakeEmailGateway.Models.Outbox", "SenderOutbox")
                        .WithMany("SentEmails")
                        .HasForeignKey("SenderOutboxId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ReceiverInbox");

                    b.Navigation("SenderOutbox");
                });

            modelBuilder.Entity("FakeEmailGateway.Models.Inbox", b =>
                {
                    b.HasOne("FakeEmailGateway.Models.User", "User")
                        .WithOne("Inbox")
                        .HasForeignKey("FakeEmailGateway.Models.Inbox", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FakeEmailGateway.Models.Outbox", b =>
                {
                    b.HasOne("FakeEmailGateway.Models.User", "User")
                        .WithOne("Outbox")
                        .HasForeignKey("FakeEmailGateway.Models.Outbox", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FakeEmailGateway.Models.Inbox", b =>
                {
                    b.Navigation("ReceivedEmails");
                });

            modelBuilder.Entity("FakeEmailGateway.Models.Outbox", b =>
                {
                    b.Navigation("SentEmails");
                });

            modelBuilder.Entity("FakeEmailGateway.Models.User", b =>
                {
                    b.Navigation("Inbox");

                    b.Navigation("Outbox");
                });
#pragma warning restore 612, 618
        }
    }
}
